syntax = "proto3";

import "google/protobuf/timestamp.proto";
//import "google/protobuf/empty.proto";

package proto;

option go_package = ".;pb";

// Decision decision:
// success param is when user passes both validation and CSRF token if any
// ErrorReason is the reason (if any) for failure in processing request

// UserRoles for now
enum UserRoles {
    INVALID = 0;
    GUEST = 1;
    USER = 2;
    SPECIAL_MEMBER = 3;
    ADMIN = 4;
}

message ErrorReason {
    string reason = 1;
}

message RegisterRequest {
    string email = 1;
    string password = 2;
    string password_confirm = 3;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    bool success = 1;
    string token = 2;
    ErrorReason error_reason = 3;
    google.protobuf.Timestamp last_login = 4;
}

message RegisterResponse {
    bool success = 1;
    string success_msg = 2;
    ErrorReason error_reason = 3;
}

message ForgotPasswordRequest {
    string email = 1;
}

message ForgotPasswordResponse {
    bool success = 1;
    string success_msg = 2;
    ErrorReason error_reason = 3;
    google.protobuf.Timestamp forgot_password_requested_at = 4;
}

message ResetPasswordRequest {
    string email = 1;
    string password = 2;
    string password_confirm = 3;
}

message ResetPasswordResponse {
  bool success = 1;
  string success_msg = 2;
  ErrorReason error_reason = 3;
  google.protobuf.Timestamp reset_password_requested_at = 4;
}

service AuthService {
    rpc Register(RegisterRequest) returns (RegisterResponse) {};
    rpc Login(LoginRequest) returns (LoginResponse) {};
    // ForgotPassword, then ResetPassword if succeed
    rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse) {};
    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {};
}

